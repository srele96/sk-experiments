/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.6/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    alias(libs.plugins.jvm)

    // Apply the application plugin to add support for building a CLI application in Java.
    application

    // https://facebook.github.io/ktfmt/
    id("com.ncorti.ktfmt.gradle") version "0.17.0"
}

ktfmt {
    kotlinLangStyle()
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use the Kotlin JUnit 5 integration.
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit5")

    // Use the JUnit 5 integration.
    testImplementation(libs.junit.jupiter.engine)

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is used by the application.
    implementation(libs.guava)

    implementation("com.github.ajalt.clikt:clikt:4.2.2")
    implementation("org.mongodb:mongodb-driver-kotlin-sync:5.0.0")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.8.1-Beta")
    implementation("com.squareup.retrofit2:retrofit:2.10.0")

    // Fixes: WARNING: SLF4J not found on the classpath. Logging is disabled for the 'org.bson' component
    // https://www.slf4j.org/manual.html#projectDep
    implementation("org.slf4j:slf4j-api:2.0.10")
    implementation("org.slf4j:slf4j-reload4j:2.0.10")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

application {
    // Define the main class for the application.
    mainClass = "org.example.AppKt"
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.register("listPlugins") {
    // find a way to use project specific indentation config while using nvim
    doLast {
        plugins.forEach {
	    println("Plugin: ${it}")
	}
    }
}

// simple task


// enhanced task

